12/05/22
This repo creates 6 pico_w/freertos/mqtt/picow_freertos_iperf_mqtt.elf & 
pico_w/freertos/mqtt/picow_freertos_iperf_mqtt.uf2 in folders remote1 to remote6.
It only takes 6 minutes on RPi4B 4Gb.
Each of pico_w will have a different hostname and client id.
Afer booting a message is published to topic 'update/memo'.
A Real time Clock is provided.
The pico_w/freertos/mqtt/picow_freertos_iperf_mqtt.elf created will connect with several ntp clients.
The pico_w/freertos/mqtt/picow_freertos_iperf_mqtt.elf created will toogle 7 GPIOs
The pico_w/freertos/mqtt/picow_freertos_iperf_mqtt.elf created will receive messages
published by remotes on topics topic_qps0 & topic_qps1.

This is used to set your PATH, needed for openocd & qemu.
. Ultibo_Projects/picoultibo.sh	

git clone https://github.com/develone/pico_w-remotes.git

cd pico_w-remotes/

Modify these 3 files for your WIFI_SSID & WIFI_PASSWORD 
mousepad 6remotes.sh pico_w/freertos/mqtt/pw_ssid.h pico_w/freertos/mqtt/mqtt_example.c &
 
gitk &

./6remotes.sh 

cd remotex/ where x 1 to 6

../o-ocd.sh .

./o-ocd.sh

RTC Alarm!                                                                     
adding gpio support to the program                                             
Back from buildCRCTable                                                        
0xd3 0x1 0x2e                                                                  
Starting FreeRTOS on core 0:                                                   
Connecting to WiFi...                                                          
Connected.                                                                     
mqtt_port = 1883 &mqtt_port 0x200005cc                                         
mqtt_ip = 0xe501a8c0 &mqtt_ip = 0x200005c8                                     
IPADDR_LOOPBACK = 0x7f000001                                                   
mqtt_client 0x20022800 &mqtt_client 0x20001800                                 
mqtt_set_inpub_callback 0x10001ae5                                             
mqtt_client_connect 0x10001afd                                                 
0x1001ac18                                                                     
this is a message from pico_w remote5  31                                      
gpio_task starts                                                               
mqtt_task starts                                                               
ntp_task starts                                                                
                                                                               
Ready, running iperf server at 192.168.1.159                                   
blink_task starts                                                              
MQTT client "remote5" connection cb: status 0                                  
MQTT client "remote5" request cb: err 0                                        
MQTT client "remote5" request cb: err 0                                        
ntp address 192.48.105.15                                                      
got ntp response: 05/12/2022 17:32:33                                          
got ntp response: 05/12/2022 17:33:03                                          
got ntp response: 05/12/2022 17:33:34                                          
got ntp response: 05/12/2022 17:34:05                                          
Alarm Fired At Wednesday 13 January 11:22:05 2020                              
ntp request failed                                                             
MQTT client "remote5" connection cb: status 256                                
ntp address 204.93.207.12                                                      
got ntp response: 05/12/2022 17:35:16                                          
got ntp response: 05/12/2022 17:35:47                                          
ntp address 38.229.57.9                                                        
got ntp response: 05/12/2022 17:36:18 

devel@pi4-27:~ $ mosquitto -c /etc/mosquitto/mosquitto.conf
1670287516: mosquitto version 2.0.11 starting
1670287516: Config loaded from /etc/mosquitto/mosquitto.conf.
1670287516: Opening ipv4 listen socket on port 9883.
1670287516: Opening ipv6 listen socket on port 9883.
1670287516: Opening ipv4 listen socket on port 1883.
1670287516: Opening ipv6 listen socket on port 1883.
1670287516: mosquitto version 2.0.11 running
1670287518: New connection from ::1:44262 on port 1883.
1670287518: New client connected from ::1:44262 as auto-9089C1D4-EB2C-E5C9-4DC5-B454C7B0B4CC (p2, c1, k60, u'testuser').
1670287531: New connection from 2600:1700:69f0:42c0::34:56338 on port 1883.
1670287531: New client connected from 2600:1700:69f0:42c0::34:56338 as auto-4BADC8B0-F291-93E3-925B-EE8D7FAD69C8 (p2, c1, k60, u'testuser').
1670287559: New connection from 2600:1700:69f0:42c0::18:59966 on port 1883.
1670287559: New client connected from 2600:1700:69f0:42c0::18:59966 as auto-249E7FF3-D62F-A546-807F-DABC70ABDBA8 (p2, c1, k60, u'testuser').
1670287566: New connection from 2600:1700:69f0:42c0::2d:52998 on port 1883.
1670287566: New client connected from 2600:1700:69f0:42c0::2d:52998 as auto-4770C9EE-17D0-A061-F1F5-24B458E43547 (p2, c1, k60, u'testuser').
1670287599: New connection from 192.168.1.175:63971 on port 1883.
1670287599: New client connected from 192.168.1.175:63971 as remote6 (p2, c1, k100, u'testuser').
1670287622: New connection from 192.168.1.159:64666 on port 1883.
1670287622: New client connected from 192.168.1.159:64666 as remote5 (p2, c1, k100, u'testuser').
1670287641: New connection from 192.168.1.160:57901 on port 1883.
1670287641: New client connected from 192.168.1.160:57901 as remote2 (p2, c1, k100, u'testuser').
1670287655: New connection from 2600:1700:69f0:42c0::24:43074 on port 1883.
1670287655: New client connected from 2600:1700:69f0:42c0::24:43074 as auto-07ADB2D3-72FB-9844-DD47-D44601A6998A (p2, c1, k60, u'testuser').
1670287718: New connection from 192.168.1.160:61299 on port 1883.
1670287718: Client remote2 already connected, closing old connection.
1670287718: New client connected from 192.168.1.160:61299 as remote2 (p2, c1, k100, u'testuser').
1670287750: Client remote6 has exceeded timeout, disconnecting.
1670287774: Client remote5 has exceeded timeout, disconnecting.
1670287817: New connection from 192.168.1.176:56263 on port 1883.
1670287817: New client connected from 192.168.1.176:56263 as remote1 (p2, c1, k100, u'testuser').

devel@pi4-27:~ $ mosquitto_pub -t 'topic_qos0' -u 'testuser' -P 'password123' -m 'topic_qos0 local msg1'

devel@pi4-27:~ $ mosquitto_pub -t 'topic_qos1' -u 'testuser' -P 'password123' -m 'topic_qos1 local msg1'

devel@pi4-38:~ $ mosquitto_pub -h pi4-27 -p 1883 -t 'topic_qos0' -u 'testuser' -P 'password123' -m 'topic_qos0 remote msg1'

devel@pi4-38:~ $ mosquitto_pub -h pi4-27 -p 1883 -t 'topic_qos1' -u 'testuser' -P 'password123' -m 'topic_qos1 remote msg1'

pico_w receives message published by RPi4B 

MQTT client "remote6" publish cb: topic topic_qos0, len 26                      
MQTT client "remote6" data cb: len 26, flags 1                                  
MQTT client "remote6" publish cb: topic topic_qos0, len 27                      
MQTT client "remote6" data cb: len 27, flags 1                                  
got ntp response: 06/12/2022 13:17:49                                           
MQTT client "remote6" publish cb: topic topic_qos1, len 26                      
MQTT client "remote6" data cb: len 26, flags 1                                  
MQTT client "remote6" publish cb: topic topic_qos1, len 27
  
devel@pi4-27:~ $ mosquitto_sub -t 'update/memo' -u 'testuser' -P 'password123'
this is a message from pico_w        remote5
this is a message from pico_w        remote6
this is a message from pico_w        remote5
this is a message from pico_w        remote1
this is a message from pico_w        remote2

devel@pi4-38:~ $ mosquitto_sub -h pi4-27 -p 1883 -t 'update/memo' -u 'testuser' -P 'password123'
this is a message from pico_w        remote5
this is a message from pico_w        remote6
this is a message from pico_w        remote5
this is a message from pico_w        remote2

devel@pi4-28:~ $ mosquitto_sub -h pi4-27 -p 1883 -t 'update/memo' -u 'testuser' -P 'password123'
this is a message from pico_w        remote5
this is a message from pico_w        remote6
this is a message from pico_w        remote5
this is a message from pico_w        remote1
this is a message from pico_w        remote2


openocd -f interface/raspberrypi-swd.cfg -f target/rp2040.cfg -c "program pico_w/freertos/iperf/picow_freertos_iperf_server_nosys.elf verify reset exit"
openocd -f interface/raspberrypi-swd.cfg -f target/rp2040.cfg -c "program pico_w/mqtt/mqtt_example.elf verify reset exit"
openocd -f interface/raspberrypi-swd.cfg -f target/rp2040.cfg -c "program pico_w/freertos/ping/picow_freertos_ping_nosys.elf verify reset exit"
Posted on Twitter.
Has anyone used mqtt.c from pico-sdk lwip lib?
error: expected expression before 'void'
     a_mqtt_client = mqtt_client_new(void);error: too many arguments to function 'mqtt_client_new'
     a_mqtt_client = mqtt_client_new(void);
 This was fix 
	/*The line was failing */
    //a_mqtt_client = mqtt_client_new(void);
	/*The next 2 lines were what was being done by failing code */
	LWIP_ASSERT_CORE_LOCKED();
	a_mqtt_client_t = (mqtt_client_t *)mem_calloc(1, sizeof(mqtt_client_t));
	printf("sizeof(mqtt_client_t) 0x%x %d \n",sizeof(mqtt_client_t),sizeof(mqtt_client_t));
lines 1255-1265	https://github.com/develone/pico_w-remotes/blob/master/pico_w/freertos/iperf/mqtt.c
/**
 * @ingroup mqtt
 * Create a new MQTT client instance
 * @return Pointer to instance on success, NULL otherwise
 */
mqtt_client_t *
mqtt_client_new(void)
{
  LWIP_ASSERT_CORE_LOCKED();
  return (mqtt_client_t *)mem_calloc(1, sizeof(mqtt_client_t));
}
	
cd pico_w-remotes

Requires: git clone https://github.com/develone/FreeRTOS-Kernel.git 
or git clone git@github.com:develone/FreeRTOS-Kernel.git
git clone https://github.com/develone/pico-sdk.git or git clone git@github.com:develone/pico-sdk.git

Without any modification this repo will create an access-point and 5 remotes.

./5remotes.sh will create 5 remotes in about 22 mins.
The pico_w is programmed with
/home/devel/pico_w-remotes/remote5/pico_w/freertos/iperf/picow_freertos_iperf_server_nosys.uf2

WIFI_SSID="nanotest" WIFI_PASSWORD="12345678"
For you local network modify these files.

5remotes.sh
pico_w/freertos/iperf/pw_ssid.h
pico_w/freertos/ping/picow_freertos_ping.c
pico_w/freertos/ping/pw_ssid.h
pico_w/iperf/picow_iperf.c
pico_w/iperf/pw_ssid.h
pico_w/ntp_client/picow_ntp_client.c
pico_w/ntp_client/pw_ssid.h
pico_w/tcp_client/picow_tcp_client.c
pico_w/tcp_client/pw_ssid.h
pico_w/tcp_server/picow_tcp_server.c
pico_w/tcp_server/pw_ssid.h
      
minicom myusb0

Welcome to minicom 2.8

OPTIONS: I18n 
Port /dev/ttyUSB0, 21:03:49

Press CTRL-A Z for help on special keys

adding gpio support to the program
Back from buildCRCTable 
0xd3 0x1 0x2e 
Starting FreeRTOS on core 0:
Connecting to WiFi...
Connected.
gpio_task starts
mqtt_task starts
CID1863 testuser
password123 10
update/memo 
mqtt_connect_client_info_t 0x10017360 
MQTT_SERVER 192.168.1.229 mqtt_port 9863 
a_mqtt_client_t 0x0  *a_mqtt_client_t 0x20041f00 
sizeof(mqtt_client_t) 0x1f0 496 
a_mqtt_client_t 0x20021f3c  *a_mqtt_client_t 0x0                                
                                                                                
Ready, running iperf server at 192.168.1.159                                    
blink_task starts

The following script set the PATH.

. Ultibo_Projects/picoultibo.sh 
/home/devel/ultibo/core:/home/devel/qemu-6.2.0-rpios/bin:/home/devel/local/openocd/bin:/home/devel/picotool/build/:/home/devel/.pyenv/plugins/pyenv-virtualenv/shims:/home/devel/.pyenv/shims:/home/devel/.pyenv/bin:/home/devel/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games

cd Ultibo_Projects/Pauls-ultibo-mqtt/QEMU/


#!/bin/bash
qemu-system-arm -machine versatilepb -cpu cortex-a8 -kernel kernel.bin \
-net user,hostfwd=tcp::5080-:80,hostfwd=tcp::5023-:23,hostfwd=tcp::9883-:1883,hostfwd=udp::5069-:69,hostfwd=tcp::6050-:5050 -net nic \
 -drive file=disk.img,if=sd,format=raw

./startqemu.sh  brings up the following window.

const ip_addr_t *ip_addr;
char MQTT_SERVER[] = "192.168.1.229";
u16_t mqtt_port 9863;

/**
 * @ingroup mqtt
 * Connect to MQTT server
 * @param client MQTT client
 * @param ip_addr Server IP
 * @param port Server port
 * @param cb Connection state change callback
 * @param arg User supplied argument to connection callback
 * @param client_info Client identification and connection options
 * @return ERR_OK if successful, @see err_t enum for other results
 */
mqtt_client_connect(mqtt_client_t *client, const ip_addr_t *ip_addr, u16_t port, mqtt_connection_cb_t cb, void *arg,
                    const struct mqtt_connect_client_info_t *client_info)

11/23/22 The pico_w is programmed with 
git clone https://github.com/develone/pico_w-remotes.git
